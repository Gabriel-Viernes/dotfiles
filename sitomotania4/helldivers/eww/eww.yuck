(defpoll time :interval "1s"
    `date +%H:%M:%S`)

(defpoll date :interval "20s"
    `date "+%A, %b %d"`)

(defpoll smallTime :interval "1s"
    `date +%H:%M`)

(defpoll activeWorkspace :interval ".5s"
    `hyprctl activeworkspace -j | jq ".id"`)

(defwidget clock[]
    (box :orientation "horizontal"
         :valign "center"
         :class "clock"
         "${time}"))

(defwidget smallClock[]
    (box :orientation "horizontal"
         :valign "center"
         :class "clock"
         "${EWW_BATTERY.BAT0.capacity}%┃${smallTime}┃${activeWorkspace}"))

(defwidget date[]
    (box :orientation "horizontal"
         :valign "center"
         :class "date"
         "${date}"))

(defwidget battery[]
    (box :orientation "horizontal"
         :valign "center"
         "${EWW_BATTERY.BAT0.capacity}%┃${EWW_BATTERY.BAT0.status}"))

(defwidget stackGroup[]
    (box :valign "center"
         :orientation "vertical"
     (clock)))

(defwindow date
            :monitor 0
            :geometry (geometry :x "5%"
                                :y "35%"
                                :width "40%"
                                :heigth "30px"
                                :anchor "top right")
            :stacking "bg"
            (date))

(defwindow battery
            :monitor 0
            :geometry (geometry :x "0%"
                                :y "0%"
                                :anchor "bottom right")
            :stacking "bg"
    (battery))

(defwindow main
           :monitor 0
           :geometry (geometry :x "15%"
                               :y "58%"
                               :width "40%"
                               :height "30px"
                               :anchor "top left")
           :stacking "bg"
  (stackGroup))

(defwindow smallClock
            :monitor 0
            :geometry (geometry :x "10px"
                                :y "13px"
                                :height "10px"
                                :anchor "top right")

            :stacking "fg"
    (smallClock))






